[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-assistant-hub"
version = "1.0.0"
description = "AI LLM Assistant Backend"
readme = "readme.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AI LLM Assistant Team"}
]
keywords = ["llm", "ai", "assistant", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Web Framework
    "fastapi>=0.118.0",
    "uvicorn[standard]>=0.37.0",
    "starlette>=0.48.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    
    # AI/ML Libraries
    "langchain>=0.3.27",
    "langchain-community>=0.3.31",
    "langchain-core>=0.3.79",
    "langchain-huggingface>=0.3.1",
    "langchain-ollama>=0.3.0",
    "langchain-chroma>=0.2.6",
    "langchain-text-splitters>=0.3.11",
    
    # Embeddings and Vector Store
    "sentence-transformers>=5.0.0",
    "faiss-cpu>=1.12.0",
    "huggingface-hub>=0.35.0",

    # text pretty print
    "rich>=14.2.0",

    # Read files
    unstructured>=0.6.0,
    markdown-it-py>=2.2.0,
    markdown>=2.4.2,
    nltk>=3.8.0,

    
    # Web Scraping
    "playwright>=1.55.0",
    "beautifulsoup4>=4.14.0",
    
    # HTTP and Networking
    "httpx>=0.28.0",
    "requests>=2.32.0",
    "aiohttp>=3.13.0",
    "atlassian-python-api>=4.0.7",

    # Data Processing
    "numpy>=2.3.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.7.0",
    
    # Utilities
    "python-dotenv>=1.1.0",
    "pydantic[email]>=2.12.0",
    "pydantic-settings>=2.11.0",
    "click>=8.3.0",
    "tqdm>=4.67.0",
    "tenacity>=9.1.0",
    "GitPython>=3.1.0",
    
    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "authlib>=1.3.0",
    "email-validator>=2.0.0",
    
    # Optional: Ollama for local LLM
    "ollama>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/your-username/ai-assistant-hub"
Documentation = "https://github.com/your-username/ai-assistant-hub#readme"
Repository = "https://github.com/your-username/ai-assistant-hub.git"
Issues = "https://github.com/your-username/ai-assistant-hub/issues"

[project.scripts]
ai-assistant-hub = "src.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
modules = [
    "langchain.*",
    "langchain_community.*",
    "langchain_core.*",
    "sentence_transformers.*",
    "faiss.*",
    "playwright.*",
    "ollama.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

